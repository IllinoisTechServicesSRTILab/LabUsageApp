{"ast":null,"code":"import _classCallCheck from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/divyabhati/labusage/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Chart from './components/Chart';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      items: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      var url = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ics\";\n      fetch(proxyurl + url).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n      var testData = {\n        labels: ['test1', 'test2', 'test3', 'test4', 'test5'],\n        datasets: [{\n          label: 'Population',\n          data: [6, 2, 4, 4, 5],\n          backgroundColor: ['rgba(200, 200, 200, .6)', 'rgba(100, 200, 200, .6)', 'rgba(200, 100, 200, .6)', 'rgba(200, 200, 100, .6)', 'rgba(200, 0, 200, .6)']\n        }]\n      };\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading data...\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, item[\"site_displayname\"], \" currently has \", item[\"usage_total\"] - item[\"usage_active\"], \" out of its total \", item[\"usage_total\"], \" computers available!\");\n        }), \";\"), React.createElement(Chart, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/divyabhati/labusage/src/App.js"],"names":["React","Component","Chart","App","props","state","items","isLoaded","proxyurl","url","fetch","then","res","json","setState","testData","labels","datasets","label","data","backgroundColor","map","item","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAAA;;AAClB,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,gEAAZ;AACAC,MAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,CAAL,CACGE,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAE,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAAEO;AAFK,SAAd;AAID,OAPH;AAQD;;;6BAEQ;AAAA,wBAEmB,KAAKR,KAFxB;AAAA,UAEDE,QAFC,eAEDA,QAFC;AAAA,UAESD,KAFT,eAESA,KAFT;AAGP,UAAIS,QAAQ,GAAG;AACXC,QAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,CADG;AAEXC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAC,YADR;AAEEC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAFR;AAGEC,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,uBALe;AAHnB,SADQ;AAFC,OAAf;;AAgBA,UAAI,CAACb,QAAL,EAAe;AACb,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,OAFD,MAEO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,KAAK,CAACe,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAAC,kBAAD,CADP,qBAC4CA,IAAI,CAAC,aAAD,CAAJ,GAAsBA,IAAI,CAAC,cAAD,CADtE,wBAESA,IAAI,CAAC,aAAD,CAFb,0BADa;AAAA,SAAd,CADL,MADF,EASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CADF;AAaD;AACF;;;;EA3DerB,S;;AA8DlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n    }\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ics\";\n    fetch(proxyurl + url)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n        })\n      });\n  }\n\n  render() {\n\n    var { isLoaded, items } = this.state;\n    var testData = {\n        labels: ['test1', 'test2', 'test3', 'test4', 'test5'],\n        datasets: [\n          {\n            label:'Population',\n            data: [6,2,4,4,5],\n            backgroundColor: [\n              'rgba(200, 200, 200, .6)',\n              'rgba(100, 200, 200, .6)',\n              'rgba(200, 100, 200, .6)',\n              'rgba(200, 200, 100, .6)',\n              'rgba(200, 0, 200, .6)'\n            ]\n          }\n        ]\n      }\n    if (!isLoaded) {\n      return <div>Loading data...</div>;\n    } else {\n      return (\n        <div className=\"App\">\n          <div class=\"info\">\n              {items.map(item => (\n                <li key={item.id}>\n                  {item[\"site_displayname\"]} currently has {item[\"usage_total\"] - item[\"usage_active\"]} out of its\n                  total {item[\"usage_total\"]} computers available!\n                </li>\n              ))};\n          </div>\n          <Chart/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/divyabhati/labusage/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/divyabhati/labusage/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Chart from './components/Chart';\nimport LabForm from './components/LabForm';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport AvgChart from './components/AvgChart';\nimport SpinningWheel from './components/SpinningWheel';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      ics: [],\n      ews: [],\n      isLoaded: false,\n      stackedICSData: {},\n      stackedEWSData: {},\n      currLab: \"\",\n      labAverages: {},\n      lineAvgs: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      var url = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ics\";\n      var url2 = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ews\";\n      var url3 = \"https://pzgw0wp7ch.execute-api.us-east-1.amazonaws.com/default/getAverageCompLab\";\n      Promise.all([fetch(proxyurl + url), fetch(proxyurl + url2), fetch(proxyurl + url3)]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            res1 = _ref2[0],\n            res2 = _ref2[1],\n            res3 = _ref2[2];\n\n        return Promise.all([res1.json(), res2.json(), res3.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 3),\n            data1 = _ref4[0],\n            data2 = _ref4[1],\n            data3 = _ref4[2];\n\n        var ics_actives = [];\n        var ics_availables = [];\n        var ics_names = [];\n        data1.map(function (item) {\n          return ics_actives.push(item[\"usage_active\"]), ics_availables.push(item[\"usage_total\"] - item[\"usage_active\"]), ics_names.push(item[\"site_displayname\"]);\n        });\n        var ews_actives = [];\n        var ews_availables = [];\n        var ews_names = [];\n        data2.map(function (item) {\n          return ews_actives.push(item[\"inusecount\"]), ews_availables.push(item[\"machinecount\"] - item[\"inusecount\"]), ews_names.push(item[\"strlabname\"]);\n        });\n        var avgs = [];\n        data3.map(function (item) {\n          return avgs.push(item[\"DCL L416\"]);\n        });\n\n        _this2.setState({\n          labAverages: data3,\n          isLoaded: true,\n          ics: data1,\n          ews: data2,\n          stackedICSData: {\n            labels: ics_names,\n            datasets: [{\n              label: 'In Use',\n              data: ics_actives,\n              backgroundColor: 'rgba(200, 100, 100, .6)'\n            }, {\n              label: 'Available',\n              data: ics_availables,\n              backgroundColor: 'rgba(100, 200, 100, .6)'\n            }]\n          },\n          stackedEWSData: {\n            labels: ews_names,\n            datasets: [{\n              label: 'In Use',\n              data: ews_actives,\n              backgroundColor: 'rgba(200, 100, 100, .6)'\n            }, {\n              label: 'Available',\n              data: ews_availables,\n              backgroundColor: 'rgba(100, 200, 100, .6)'\n            }]\n          },\n          lineAvgs: {\n            labels: [\"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\"],\n            datasets: [{\n              label: 'In Use',\n              data: avgs,\n              backgroundColor: 'rgba(200, 150, 200,.6)'\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          ics = _this$state.ics,\n          ews = _this$state.ews,\n          isLoaded = _this$state.isLoaded,\n          stackedICSData = _this$state.stackedICSData,\n          stackedEWSData = _this$state.stackedEWSData,\n          test = _this$state.test,\n          labAverages = _this$state.labAverages;\n      var stackedOptions = {\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              display: true,\n              autoSkip: false\n            }\n          }],\n          yAxes: [{\n            stacked: true\n          }]\n        }\n      };\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          class: \"loading_box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Loading data...\", React.createElement(SpinningWheel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"navbar_new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Lab Usage Data\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://techservices.illinois.edu/content/computer-lab-locations-and-hours\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"ICS\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://it.engineering.illinois.edu/ews\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"EWS\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://srtilab.techservices.illinois.edu/\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"SRTI\"))), React.createElement(\"div\", {\n          class: \"chart_title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"ICS (Instructional Computing Services)\"), React.createElement(\"div\", {\n          class: \"chart_container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          chartData: this.state.stackedICSData,\n          chartOptions: stackedOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"chart_title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"EWS (Engineering Workstations)\"), React.createElement(\"div\", {\n          class: \"chart_container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          chartData: this.state.stackedEWSData,\n          chartOptions: stackedOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"chart_title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Hourly Averages For DCL L416\"), React.createElement(\"div\", {\n          class: \"chart_container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(AvgChart, {\n          chartData: this.state.lineAvgs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })), React.createElement(LabForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/divyabhati/labusage/src/App.js"],"names":["React","Component","Chart","LabForm","Navbar","Nav","Button","AvgChart","SpinningWheel","App","props","state","ics","ews","isLoaded","stackedICSData","stackedEWSData","currLab","labAverages","lineAvgs","proxyurl","url","url2","url3","Promise","all","fetch","then","res1","res2","res3","json","data1","data2","data3","ics_actives","ics_availables","ics_names","map","item","push","ews_actives","ews_availables","ews_names","avgs","setState","labels","datasets","label","data","backgroundColor","test","stackedOptions","scales","xAxes","stacked","ticks","display","autoSkip","yAxes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\nimport LabForm from './components/LabForm';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport AvgChart from './components/AvgChart';\nimport SpinningWheel from './components/SpinningWheel';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ics: [],\n      ews: [],\n      isLoaded: false,\n      stackedICSData:{},\n      stackedEWSData:{},\n      currLab:\"\",\n      labAverages:{},\n      lineAvgs:{},\n    }\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ics\";\n    const url2 = \"https://69smoo2dc6.execute-api.us-east-1.amazonaws.com/api/ews\";\n    const url3 = \"https://pzgw0wp7ch.execute-api.us-east-1.amazonaws.com/default/getAverageCompLab\";\n    Promise.all([fetch(proxyurl + url), fetch(proxyurl + url2), fetch(proxyurl + url3)])\n      .then(([res1, res2, res3]) => Promise.all([res1.json(), res2.json(), res3.json()]))\n      .then(([data1, data2, data3]) => {\n        var ics_actives = [];\n        var ics_availables = [];\n        var ics_names = [];\n        data1.map(item => (\n          ics_actives.push(item[\"usage_active\"]),\n          ics_availables.push(item[\"usage_total\"] - item[\"usage_active\"]),\n          ics_names.push(item[\"site_displayname\"])\n        ));\n        var ews_actives = [];\n        var ews_availables = [];\n        var ews_names = [];\n        data2.map(item => (\n          ews_actives.push(item[\"inusecount\"]),\n          ews_availables.push(item[\"machinecount\"] - item[\"inusecount\"]),\n          ews_names.push(item[\"strlabname\"])\n        ));\n        var avgs = [];\n        data3.map(item => (\n          avgs.push(item[\"DCL L416\"])\n        ));\n        this.setState({\n          labAverages: data3,\n          isLoaded: true,\n          ics: data1,\n          ews: data2,\n          stackedICSData: {\n            labels: ics_names,\n            datasets: [\n              {\n                label:'In Use',\n                data: ics_actives,\n                backgroundColor: 'rgba(200, 100, 100, .6)'\n              },\n              {\n                label:'Available',\n                data: ics_availables,\n                backgroundColor: 'rgba(100, 200, 100, .6)'\n              }\n            ],\n          },\n          stackedEWSData: {\n            labels: ews_names,\n            datasets: [\n              {\n                label:'In Use',\n                data: ews_actives,\n                backgroundColor: 'rgba(200, 100, 100, .6)'\n              },\n              {\n                label:'Available',\n                data: ews_availables,\n                backgroundColor: 'rgba(100, 200, 100, .6)'\n              }\n            ],\n          },\n          lineAvgs: {\n            labels: [\"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\",\n          \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\",\n          \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\"],\n            datasets: [\n              {\n                label: 'In Use',\n                data: avgs,\n                backgroundColor: 'rgba(200, 150, 200,.6)'\n              }\n            ],\n          }\n        })\n      });\n  }\n\n  render() {\n\n    var { ics, ews, isLoaded, stackedICSData, stackedEWSData, test, labAverages } = this.state;\n    var stackedOptions = {\n      scales: {\n        xAxes: [{\n          stacked: true ,\n          ticks: {\n            display: true,\n            autoSkip: false\n          }\n        }],\n        yAxes: [{ stacked: true }]\n      },\n    };\n    if (!isLoaded) {\n      return (\n        <div class=\"loading_box\">\n          Loading data...\n          <SpinningWheel />\n        </div>);\n    } else {\n      return (\n        <div className=\"App\">\n          <div class=\"navbar_new\">\n            <div>Lab Usage Data</div>\n            <div><a href=\"https://techservices.illinois.edu/content/computer-lab-locations-and-hours\" target=\"_blank\">ICS</a></div>\n            <div><a href=\"https://it.engineering.illinois.edu/ews\" target=\"_blank\">EWS</a></div>\n            <div><a href=\"https://srtilab.techservices.illinois.edu/\" target=\"_blank\">SRTI</a></div>\n          </div>\n          <div class=\"chart_title\">ICS (Instructional Computing Services)</div>\n          <div class=\"chart_container\">\n            <Chart chartData={this.state.stackedICSData} chartOptions={stackedOptions} />\n          </div>\n          <div class=\"chart_title\">EWS (Engineering Workstations)</div>\n          <div class=\"chart_container\">\n            <Chart chartData={this.state.stackedEWSData} chartOptions={stackedOptions} />\n          </div>\n          <div class=\"chart_title\">Hourly Averages For DCL L416</div>\n          <div class=\"chart_container\">\n            <AvgChart chartData={this.state.lineAvgs} />\n          </div>\n          <LabForm />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}